with CTE
as
(
    select *
    from Products
    where change_date <= '2019-08-16'
),
TempCTE as 
(
    select *
    from CTE
    union
    select *
    from Products
    where product_id not in (select product_id from CTE)
),
RankedProduct as
(
    select product_id,
    case
        when change_date <= '2019-08-16' then new_price
        else 10
        end as price, 
        row_number() over (partition by product_id order by change_date desc) as rn
    from TempCTE
)

select product_id, price
from RankedProduct
where rn = 1






